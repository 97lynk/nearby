user www-data;
worker_processes auto;
pid /run/nginx.pid;
#include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	# what times to include
	include /etc/nginx/mime.types;

	# what is the default one
	default_type application/octet-stream;

	# Sets the path, format, and configuration for a buffered log write
	log_format compression '[$remote_addr] - $remote_user [$time_iso8601] '
	'"$request" $status $body_bytes_sent $upstream_addr '
	'"$http_referer" "$http_user_agent"';

	access_log /var/log/nginx/access.log compression;

	proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=cache_files:100m inactive=90m;

	limit_req_zone $binary_remote_addr zone=ip_limit:10m rate=15r/s;
	limit_req_zone "$binary_remote_addr$request_uri" zone=url_limit:10m rate=5r/s;
	limit_req_status 429;

	upstream ws {
	    # enable sticky session with either "hash" (uses the complete IP address)
        hash $remote_addr consistent;
        # or "ip_hash" (uses the first three octets of the client IPv4 address, or the entire IPv6 address)
        # ip_hash;
        # or "sticky" (needs commercial subscription)
        # sticky cookie srv_id expires=1h domain=.example.com path=/;

		server nearby1:8081;
		server nearby2:8081;
	}

	server {
		listen 80 default_server;
		gzip on;
		gzip_types application/javascript application/json text/css;

		location / {
			proxy_pass http://ws;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            # enable ws
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
		}
	}
}